@using Demo.WebUI.Helpers
@using DemoTask.Service.ViewModel
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>@ViewBag.Title</title>
	<link rel="stylesheet" href="/css/bootstrap.css" />
	<link rel="stylesheet" href="/css/datepicker.css" />
	<link rel="stylesheet" href="/css/timepicki.css" />
	<link rel="stylesheet" href="/css/footable.core.css" />
	<link rel="stylesheet" href="/css/footable-demos.css" />
	<link rel="stylesheet" href="/css/font-awesome.css" />
	<link rel="stylesheet" href="/css/fullcalendar.css" />
	<link rel="stylesheet" href="/css/selectyze.jquery.css" />
	<link rel="stylesheet" href="/css/uy-style.css" />
	<link rel="stylesheet" href="/css/custom-boostrap.css" />
	<link rel="stylesheet" href="/css/select2.css" />

</head>
<body>

	@{
		var session = HttpContextAccessor.HttpContext.Session;
		string userName = SessionHelper.GetObjectFromJson<string>(session, "userName");
		if (string.IsNullOrEmpty(userName))
		{
			Context.Response.Redirect("/Home");
			return;
		}
	}

	<div class="userLoginInfo hidden-xs">
		<ul class="list-inline text-right">
			<li>Company: SOFTWARE GAZE </li>
			<li>Branch: HEAD OFFICE</li>
			<li>Login as: @userName</li>
		</ul>
	</div>

	<div class="navbar navbar-inverse navbar-fixed-top hidden-xs" role="navigation">
		<div class="container-fluid">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"><span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button>
				<a class="navbar-brand" href="/Home">
					<img src="~/images/logo.png" width="130" alt="logo">
				</a>
			</div>
			<div class="navbar-collapse collapse navbar-custom">

				<ul class="nav navbar-nav navbar-right">

					<li>
						<span class="noti glyphicon glyphicon-bell" style=" margin-top: 20px; color: white; font-size: large;"><span class="count"> </span></span>

						<div class="noti-content">
							<div class="noti-top-arrow"></div>
							<ul id="notiContent"></ul>
						</div>
					</li>

					<li class="dropdown">
						<a href="#" class="dropdown-toggle" data-toggle="dropdown">
							@userName
							<i class="fa fa-angle-down"></i>
						</a>
						<ul class="dropdown-menu" role="menu">
							<li><a href="#"><i class="fa fa-user"></i>Change Password</a></li>
							<li><a href="/Login"><i class="fa fa-power-off"></i>Log Out</a></li>
						</ul>
					</li>
				</ul>
			</div>
		</div>
	</div>

	<div class="topMenu">
		<a href="/Home">
			<img src="~/images/logo.png" alt="logo">
		</a><a class="topMenulink" href="#"><span><i class="fa fa-bars"></i></span></a>
	</div>

	<div class="navigation">
		<ul id="mobileNav">
			<li class="visible-xs">
				<a href="#">
					<span class="glyphicon glyphicon-user"></span>
					<asp:Label ID="lblUserMobile" runat="server"></asp:Label>
					<i class="fa fa-angle-right"></i>
				</a>
				<ul class="dropdown">
					<li><a href="#"><i class="fa fa-user"></i>Change Password</a></li>
					<li><a href="/Login"><i class="fa fa-power-off"></i>Log Out</a></li>
				</ul>
			</li>
		</ul>

		@* Render dynamic panels outside of UL *@
		@{
			var dataMobile = SessionHelper.GetObjectFromJson<List<DemoTask.Service.ViewModel.MasterMenuViewModel>>(session, "menu");
			if (dataMobile != null)
			{
				foreach (var item in dataMobile.Where(w => w.ParentId == 0))
				{
					<div class="panel panel-default">
						<div class="panel-heading">
							<p class="panel-title">
								@if (item.Id == 1)
								{
									<a href="/Home"><i class="fa fa-tree"></i> Home</a>
								}
								else
								{
									<a data-toggle="collapse" data-parent="#accordion" href="#panel-@item.Id">
										<span class="glyphicon glyphicon-briefcase"></span> @item.Name
									</a>
								}
							</p>
						</div>
						@{
							var mobilemenulist = dataMobile.Where(w => w.ParentId == item.Id).ToList();
							if (mobilemenulist.Any())
							{
								<div id="panel-@item.Id" class="panel-collapse collapse">
									<div class="panel-body">
										<ul>
											@foreach (var submenu in mobilemenulist)
											{
												<li>
													<a id="@submenu.Id" href="@submenu.URL">
														<span class="glyphicon glyphicon-usd"></span> @submenu.Name
													</a>
												</li>
											}
										</ul>
									</div>
								</div>
							}
						}
					</div>
				}
			}
		}
	</div>




	<div class="container-fluid">
		<div class="row">
			<div class="col-sm-3 col-md-2 sidebar">
				<div class="panel-group" id="accordion">
					@{
						var data = SessionHelper.GetObjectFromJson<List<DemoTask.Service.ViewModel.MasterMenuViewModel>>(session, "menu");

						if (data != null)
						{
							foreach (var item in data.Where(w => w.ParentId == 0))
							{
								<div class="panel panel-default">
									<div class="panel-heading">
										<p class="panel-title">
											@if (item.Id == 1)
											{
												<a href="/Home"><i class="fa fa-tree"></i> Home</a>
											}
											else
											{
												<a data-toggle="collapse" data-parent="#@item.Name" href="#@item.Name">
													<span class="glyphicon glyphicon-briefcase"></span> @item.Name
												</a>
											}
										</p>
									</div>
									@{
										var menulist = data.Where(w => w.ParentId == item.Id).ToList();

										if (menulist.Count > 0)
										{
											<div id="@item.Name" class="panel-collapse collapse">
												<div class="panel-body">
													<ul>
														@foreach (var submenu in menulist)
														{
															<li>
																<a id="@submenu.Id" href="@submenu.URL">
																	<span class="glyphicon glyphicon-usd"></span> @submenu.Name
																</a>
															</li>
														}
													</ul>
												</div>
											</div>
										}
									}
								</div>
							}
						}
					}

				</div>

			</div>
			<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main mainInner">
				@RenderBody()

			</div>
		</div>
	</div>


	<script src="~/js/jquery-2.1.1.js"></script>
	<script src="~/js/jquery-3.6.0.min.js"></script>
	<script src="~/js/jquery.unobtrusive-ajax.js"></script>
	<script src="~/js/jquery.cookie.js"></script>
	<script src="~/js/bootstrap.js"></script>
	<script src="~/js/bootstrap-datepicker.js"></script>
	<script src="~/js/timepicki.js"></script>
	<script src="~/js/jquery.nicescroll.js"></script>
	<script src="~/js/moment.js"></script>
	<script src="~/js/fullcalendar.js"></script>
	<script src="~/js/dropzone.js"></script>
	<script src="~/js/selectyze.jquery.js"></script>
	<script src="~/js/uy.script.js"></script>
	<script src="~/js/select2.js"></script>
	<script src="~/js/footable.js"></script>
	<script src="~/js/footable.sort.js"></script>
	<script src="~/js/footable.paginate.js"></script>


	<script src="~/js/jquery.validate.js"></script>
	<script src="~/js/jquery.validate.unobtrusive.js"></script>
	<script src="~/js/custom-datetime-validate.js"></script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
